"""Reinit

Revision ID: 8af67bb38594
Revises: 
Create Date: 2023-04-18 01:50:30.179149

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8af67bb38594'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_changed', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('admin',
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_changed', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('admin_password', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('employer',
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_changed', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('roles', postgresql.ARRAY(sa.Enum('ceo', 'recruiter', name='employerroles')), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('job_seeker',
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_changed', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('preferred_contact_method', sa.Enum('any', 'phone', 'email', 'pm', name='contactmethods'), nullable=False),
    sa.Column('roles', postgresql.ARRAY(sa.Enum('talent', name='jobseekerroles')), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('profile',
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_changed', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('date_of_birth', sa.String(length=10), nullable=True),
    sa.Column('profile_picture_file_url', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('phone_number', sa.String(length=13), nullable=True),
    sa.Column('public_fields', postgresql.ARRAY(sa.Enum('first_name', 'last_name', 'date_of_birth', 'profile_picture_file_url', 'city', 'address', 'phone_number', name='profilefieldsenum')), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('awards_and_achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_changed', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('image_file_url', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=False),
    sa.Column('date', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['job_seeker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('certificate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_changed', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('image_file_url', sa.String(length=255), nullable=True),
    sa.Column('date', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['job_seeker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('education',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_changed', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('institution', sa.String(length=100), nullable=False),
    sa.Column('education_level', sa.Enum('high_school', 'bachelor', 'master', 'doctorate', 'other', name='educationlevelenum'), nullable=False),
    sa.Column('qualification', sa.String(length=100), nullable=False),
    sa.Column('fields_of_study', postgresql.ARRAY(sa.String(length=100)), nullable=True),
    sa.Column('start_date', sa.String(length=100), nullable=False),
    sa.Column('end_date', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('diploma_number', sa.String(length=100), nullable=True),
    sa.Column('diploma_file_url', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['job_seeker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reference',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_changed', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('position', sa.String(length=100), nullable=False),
    sa.Column('company', sa.String(length=100), nullable=False),
    sa.Column('contacts', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['job_seeker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('requirement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_changed', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('salary_min_range', sa.Integer(), nullable=True),
    sa.Column('salary_max_range', sa.Integer(), nullable=True),
    sa.Column('employment_type', sa.Enum('FULL_TIME', 'PART_TIME', 'CONTRACT', 'TEMPORARY', 'VOLUNTEER', 'INTERN', 'FREELANCE', 'OTHER', name='employmenttypeenum'), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['job_seeker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('work_exp',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_changed', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('company_name', sa.String(length=64), nullable=False),
    sa.Column('job_title', sa.String(length=64), nullable=False),
    sa.Column('field_of_work', sa.String(length=64), nullable=False),
    sa.Column('employment_type', sa.Enum('FULL_TIME', 'PART_TIME', 'CONTRACT', 'TEMPORARY', 'VOLUNTEER', 'INTERN', 'FREELANCE', 'OTHER', name='employmenttypeenum'), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('start_date', sa.String(length=10), nullable=False),
    sa.Column('end_date', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['job_seeker.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cv',
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_changed', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('hobbies', sa.String(length=100), nullable=True),
    sa.Column('summary', sa.String(length=500), nullable=True),
    sa.Column('education_level', sa.Enum('high_school', 'bachelor', 'master', 'doctorate', 'other', name='educationlevelenum'), nullable=True),
    sa.Column('standard_languages', postgresql.ARRAY(sa.Enum('English', 'Chinese', 'Spanish', 'Arabic', 'French', 'Russian', 'Portuguese', 'German', 'Japanese', 'Korean', 'Turkish', 'Italian', 'Polish', 'Dutch', 'Swedish', 'Norwegian', 'Danish', 'Finnish', 'Hebrew', 'Greek', 'Bulgarian', name='languageenum')), nullable=True),
    sa.Column('other_languages', sa.ARRAY(sa.String(length=64)), nullable=True),
    sa.Column('professional_skills', sa.ARRAY(sa.String(length=64)), nullable=True),
    sa.Column('soft_skills', sa.ARRAY(sa.String(length=64)), nullable=True),
    sa.Column('requirements_id', sa.Integer(), nullable=True),
    sa.Column('public_status', sa.Enum('PUBLIC', 'PROTECTED', 'PRIVATE', name='publicstatusenum'), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['job_seeker.id'], ),
    sa.ForeignKeyConstraint(['requirements_id'], ['requirement.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cv_awards_and_achievements_association',
    sa.Column('cv_id', sa.Integer(), nullable=True),
    sa.Column('cv_awards_and_achievements_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cv_awards_and_achievements_id'], ['awards_and_achievements.id'], ),
    sa.ForeignKeyConstraint(['cv_id'], ['cv.id'], )
    )
    op.create_table('cv_certificate_association',
    sa.Column('cv_id', sa.Integer(), nullable=True),
    sa.Column('certificate_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['certificate_id'], ['certificate.id'], ),
    sa.ForeignKeyConstraint(['cv_id'], ['cv.id'], )
    )
    op.create_table('cv_education_association',
    sa.Column('cv_id', sa.Integer(), nullable=True),
    sa.Column('education_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['cv.id'], ),
    sa.ForeignKeyConstraint(['education_id'], ['education.id'], )
    )
    op.create_table('cv_reference_association',
    sa.Column('cv_id', sa.Integer(), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['cv.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], )
    )
    op.create_table('cv_work_exp_association',
    sa.Column('cv_id', sa.Integer(), nullable=True),
    sa.Column('work_exp_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['cv.id'], ),
    sa.ForeignKeyConstraint(['work_exp_id'], ['work_exp.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cv_work_exp_association')
    op.drop_table('cv_reference_association')
    op.drop_table('cv_education_association')
    op.drop_table('cv_certificate_association')
    op.drop_table('cv_awards_and_achievements_association')
    op.drop_table('cv')
    op.drop_table('work_exp')
    op.drop_table('requirement')
    op.drop_table('reference')
    op.drop_table('education')
    op.drop_table('certificate')
    op.drop_table('awards_and_achievements')
    op.drop_table('profile')
    op.drop_table('job_seeker')
    op.drop_table('employer')
    op.drop_table('admin')
    op.drop_table('user')
    # ### end Alembic commands ###
